Ext.data.JsonP.nano_console({"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/nano.html#nano-console' target='_blank'>nano.js</a></div></pre><div class='doc-contents'><p>Alias for window.console object.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-debug' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='nano.console'>nano.console</span><br/><a href='source/nano.html#nano-console-method-debug' target='_blank' class='view-source'>view source</a></div><a href='#!/api/nano.console-method-debug' class='name expandable'>debug</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Alias method for window.console.debug (if not exists window.console.log will be used). ...</div><div class='long'><p>Alias method for window.console.debug (if not exists window.console.log will be used).</p>\n</div></div></div><div id='method-info' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='nano.console'>nano.console</span><br/><a href='source/nano.html#nano-console-method-info' target='_blank' class='view-source'>view source</a></div><a href='#!/api/nano.console-method-info' class='name expandable'>info</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Alias method for window.console.info (if not exists window.console.log will be used). ...</div><div class='long'><p>Alias method for window.console.info (if not exists window.console.log will be used).</p>\n</div></div></div><div id='method-log' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='nano.console'>nano.console</span><br/><a href='source/nano.html#nano-console-method-log' target='_blank' class='view-source'>view source</a></div><a href='#!/api/nano.console-method-log' class='name expandable'>log</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Alias method for window.console.log. ...</div><div class='long'><p>Alias method for window.console.log.</p>\n</div></div></div><div id='method-warn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='nano.console'>nano.console</span><br/><a href='source/nano.html#nano-console-method-warn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/nano.console-method-warn' class='name expandable'>warn</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Alias method for window.console.warn (if not exists window.console.log will be used). ...</div><div class='long'><p>Alias method for window.console.warn (if not exists window.console.log will be used).</p>\n</div></div></div></div></div></div></div>","mixedInto":[],"subclasses":[],"aliases":{},"inheritdoc":null,"superclasses":[],"tagname":"class","files":[{"href":"nano.html#nano-console","filename":"nano.js"}],"parentMixins":[],"html_meta":{},"alternateClassNames":[],"members":{"css_var":[],"event":[],"method":[{"tagname":"method","owner":"nano.console","name":"debug","id":"method-debug","meta":{}},{"tagname":"method","owner":"nano.console","name":"info","id":"method-info","meta":{}},{"tagname":"method","owner":"nano.console","name":"log","id":"method-log","meta":{}},{"tagname":"method","owner":"nano.console","name":"warn","id":"method-warn","meta":{}}],"css_mixin":[],"cfg":[],"property":[]},"extends":null,"requires":[],"singleton":true,"statics":{"event":[],"css_var":[],"method":[],"css_mixin":[],"cfg":[],"property":[]},"name":"nano.console","mixins":[],"code_type":"nop","inheritable":false,"uses":[],"id":"class-nano.console","component":false,"meta":{}});